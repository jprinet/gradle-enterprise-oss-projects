name: Run experiments

on:
    push:
    pull_request:

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
        matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
        - uses: actions/checkout@v2
        - name: Load projects
          id: set-matrix
          run: |
            matrix=`cat ./.github/projects.json`
            # the following lines are only required for multi line json
            matrix="${matrix//'%'/'%25'}"
            matrix="${matrix//$'\n'/'%0A'}"
            matrix="${matrix//$'\r'/'%0D'}"
            # end of optional handling for multi line json
            echo "::set-output name=matrix::$matrix"

  experiments:
    needs: matrix
    runs-on: ubuntu-latest
    env:
      GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
    strategy:
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
      - name: Download and Extract Build Validation Scripts
        run: |
          curl -s -L -O https://github.com/gradle/gradle-enterprise-build-validation-scripts/releases/download/v1.0/gradle-enterprise-gradle-build-validation-1.0.zip
          unzip -q -o gradle-enterprise-gradle-build-validation-1.0.zip
      - uses: ./.github/actions/exp1
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
      - uses: ./.github/actions/exp2
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
      - uses: ./.github/actions/exp3
        with:
          repositoryUrl: ${{ matrix.repositoryUrl }}
          branch: ${{ matrix.branch }}
          task: ${{ matrix.task }}
