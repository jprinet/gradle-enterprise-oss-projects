name: Apollo Kotlin

on:
  workflow_dispatch:

env:
  GRADLE_ENTERPRISE_URL: "https://ge.solutions-team.gradle.com"
  GIT_REPO: "https://github.com/apollographql/apollo-kotlin"
  TASKS: "build"
  ARGS: "-x wasmJsNodeTest -x :intellij-plugin:test"

jobs:
  Experiment:
    strategy:
      fail-fast: false
      matrix:
        include:
          - experimentId: 1
          - experimentId: 2
          - experimentId: 3
    runs-on: macos-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
#      - name: Add git hook to temporarily disable caching for :intellij-plugin:instrumentCode
#        run: |
#          mkdir ~/git-hooks
#          echo -e 'echo "\ntasks.withType<org.jetbrains.intellij.tasks.BuildPluginTask>().configureEach { outputs.doNotCacheIf(\"buildPlugin should not be cacheable as it is a Zip task\") { true } }" >> intellij-plugin/build.gradle.kts\n' >> ~/git-hooks/post-checkout
#          chmod +x ~/git-hooks/post-checkout
#          git config --global core.hooksPath ~/git-hooks
      - name: Download latest version of the validation scripts
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/download@actions-stable
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Increase timeout when retrieving build scans
        run: echo 'connect.timeout=PT90S' >> gradle-enterprise-gradle-build-validation/network.settings && echo 'read.timeout=PT90S' >> gradle-enterprise-gradle-build-validation/network.settings
      - name: Run experiment 1
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/experiment-1@actions-stable
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: "${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          args: ${{ env.ARGS }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: matrix.experimentId == 1
      - name: Run experiment 2
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/experiment-2@actions-stable
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: "${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          args: ${{ env.ARGS }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 2
      - name: Run experiment 3
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/experiment-3@actions-stable
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: "${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          tasks: ${{ env.TASKS }}
          args: ${{ env.ARGS }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 3
