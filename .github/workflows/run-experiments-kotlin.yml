name: Kotlin

on:
  workflow_dispatch:

env:
  GRADLE_ENTERPRISE_URL: "https://ge.solutions-team.gradle.com"
  GIT_REPO: "https://github.com/JetBrains/kotlin"
  GIT_OPTIONS: "--depth 1 -c core.hookspath=../git-hooks"
  TASKS: "install"
  ARGS: "-Pkotlin.test.maxParallelForks=4"

jobs:
  Experiment:

    strategy:
      matrix:
        include:
          - experimentId: 1
          - experimentId: 2
          - experimentId: 3

    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 6
        uses: actions/setup-java@v3
        with:
          java-version: 6
          distribution: "zulu"
      - name: Set up JDK 7
        uses: actions/setup-java@v3
        with:
          java-version: 7
          distribution: "zulu"
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: "temurin"
      - name: Display toolchain
        run: |
          touch settings.gradle
          gradle -q javaToolchains ${{ env.ARGS }}
        shell: bash
      - name: Create git hook to disable verification metadata
        run: |
          mkdir git-hooks
          echo "#! /bin/bash\nrm -f gradle/verification-metadata.xml" > git-hooks/post-checkout
          chmod +x git-hooks/post-checkout
          cat git-hooks/post-checkout
          pwd
      - name: Download latest version of the validation scripts
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/download@actions-stable
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run experiment 1
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/experiment-1@actions-stable
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: "${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          gitOptions: ${{ env.GIT_OPTIONS }}
          tasks: ${{ env.TASKS }}
          args: ${{ env.ARGS }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
        if: matrix.experimentId == 1
      - name: Run experiment 2
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/experiment-2@actions-stable
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: "${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          gitOptions: ${{ env.GIT_OPTIONS }}          
          tasks: ${{ env.TASKS }}
          args: ${{ env.ARGS }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 2
      - name: Run experiment 3
        uses: gradle/gradle-enterprise-build-validation-scripts/.github/actions/gradle/experiment-3@actions-stable
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: "${{ secrets.GE_SOLUTIONS_ACCESS_TOKEN }}"
        with:
          gitRepo: ${{ env.GIT_REPO }}
          gitOptions: ${{ env.GIT_OPTIONS }}
          tasks: ${{ env.TASKS }}
          args: ${{ env.ARGS }}
          gradleEnterpriseUrl: ${{ env.GRADLE_ENTERPRISE_URL }}
          failIfNotFullyCacheable: true
        if: matrix.experimentId == 3
